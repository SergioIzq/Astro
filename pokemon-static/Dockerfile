# ETAPA 1: BUILDER - Compilaci칩n del sitio Astro

# Utilizamos la 칰ltima imagen oficial de Node con Alpine Linux para un tama침o peque침o
FROM node:20-alpine AS builder

# Establece el directorio de trabajo dentro del contenedor
WORKDIR /app

# Copia los archivos de definici칩n de dependencias
COPY package.json package-lock.json ./

# Instala las dependencias
RUN npm install

# Copia el resto del c칩digo fuente
COPY . .

# Compila el sitio Astro
# Astro genera el output en la carpeta 'dist' por defecto
RUN npm run build 

# ----------------------------------------------------------------------

# ETAPA 2: PRODUCTION - Servir el sitio est치tico con Nginx

# Usamos la imagen Nginx m치s ligera disponible
FROM nginx:alpine

# Copia la configuraci칩n de Nginx para el routing de Astro/SPAs (opcional, pero recomendado)
# Si tu sitio es est치tico puro, puedes omitir esta l칤nea. 
# Si usas routing en el lado del cliente (como Angular), necesitas una configuraci칩n de Nginx.
# COPY nginx.conf /etc/nginx/conf.d/default.conf 

# 游꿢 Copia los archivos est치ticos compilados (desde /app/dist) al directorio de Nginx
COPY --from=builder /app/dist /usr/share/nginx/html

# El puerto 80 es el puerto est치ndar que Nginx escucha
EXPOSE 80

# Comando para iniciar Nginx
CMD ["nginx", "-g", "daemon off;"]